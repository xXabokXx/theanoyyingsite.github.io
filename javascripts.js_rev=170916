/* Should be in sync with FileManager */
var FILEMODE_NOT_SET = 0;
var FILEMODE_IMAGES = 1;
var FILEMODE_VIDEOS = 2;
var FILEMODE_DOCUMENTS = 4;
var FILEMODE_AUDIO = 8;
var FILEMODE_ALLFILES = 64;

var IMAGE_FILE_EXTENSIONS = ['.jpg', '.jpeg', '.png'];
var VIDEO_FILE_EXTENSIONS = ['.mov', '.mp4'];
var AUDIO_FILE_EXTENSIONS = ['.mp3', '.aiff', '.wav'];

function showGraphDiv(grpId) {
  grpId = grpId.substring(1);

  $('div[id^=chart]').css('display', 'none');
  $('#overviewChart').css('display', 'none');

  if ($('#chart' + grpId).css('display') == 'none') {
    $('#chart' + grpId).css('display', 'block');
  } else {
    $('#chart' + grpId).css('display', 'none');
  }
}

function showUploadSpinner() {
  $('body').append('<div id=\'brighten-screen\'></div>');
  $('#brighten-screen')
    .css('background', 'rgba(255,255,255,0.5) url(../../images/big_file_spinner.gif) no-repeat center');
}

function hideUploadSpinner() {
  $('#brighten-screen').remove();
}

// Confirmation popup
function rusure(text) {
  return confirm(text);
}

// Validate fields, arg0=message, arg1...=form.objects
function valid() {
  for (var i = 1; i < valid.arguments.length; i++) {
    if ((valid.arguments[i].type === "checkbox" && !valid.arguments[i].checked) || valid.arguments[i].value == '') {
      alert(valid.arguments[0]);
      return false;
    }
  }
  return true;
}

// Toggle element (input text usually) enabled/disabled
function toggle(element) {
  element.disabled = !element.disabled;
}

// Move a selected option from one select to another
function moveSelectedOptions(fromList, toList) {
  // Lagra vald text & id i templistor
  var selectedText = [];
  var selectedValues = [];
  var numSelected = 0;

  // Flytta valda poster till templistor
  for (var i = fromList.length - 1; i >= 0; i--) {
    if (fromList.options[i].selected) {
      selectedText[numSelected] = fromList.options[i].text;
      selectedValues[numSelected] = fromList.options[i].value;
      if (fromList.length > 0) {
        fromList.options[i] = null;
      }
      numSelected++;
    }
  }
  // Flytta från templistor till mållista
  for (i = numSelected - 1; i >= 0; i--) {
    toList.options[toList.length] = new Option(selectedText[i], selectedValues[i]);
  }
}

// Selects all options in a select, used before a submit is made
function selectAll() {
  for (var i = 0; i < selectAll.arguments.length; i++) {
    if (selectAll.arguments[i] != null) {
      for (var j = 0; j < selectAll.arguments[i].length; j++) {
        selectAll.arguments[i].options[j].selected = true;
      }
    }
  }
}

// Selects an option with the given value
function selectOption(list, value) {
  for (var i = 0; i < list.length; i++) {
    if (list.options[i].value == value) {
      list.options[i].selected = true;
    }
  }
}

function rightString(fullString, subString) {
  if (fullString.indexOf(subString) == -1) {
    return '';
  } else {
    return (fullString.substring(fullString.indexOf(subString) + subString.length, fullString.length));
  }
}

function leftString(fullString, subString) {
  if (fullString.indexOf(subString) == -1) {
    return '';
  } else {
    return (fullString.substring(0, fullString.indexOf(subString)));
  }
}

// Create a new window for the help system
function helpPopup() {
  var url = document.getElementById('helpURL');
  if (url != null) {
    win = window.open(url.title, 'helpWindow', 'width=580,height=400,toolbar=no,location=no,directories=no,status=yes,scrollbars=yes,menubar=yes,resizable=yes');
    win.focus();
  }
}

// Create a new window for printing
function popupWindow(url) {
  if (url == null) {
    win = window.open('', 'popupWindow', 'width=780,height=580,toolbar=no,location=no,directories=no,status=yes,scrollbars=yes,menubar=yes,resizable=yes');
  } else {
    var delim = '&';
    if (url.indexOf('?') < 1) {
      delim = '?';
    }
    win = window.open(url + delim + 'hidemenu=1', 'popupWindow', 'width=780,height=580,toolbar=no,location=no,directories=no,status=yes,scrollbars=yes,menubar=yes,resizable=yes');
  }
  win.focus();
  return win;
}

// Create a new top window
function newWindow(url) {
  if (url == null) {
    win = window.open('', 'newWindow', 'width=1024,height=768,toolbar=yes,location=yes,directories=yes,status=yes,scrollbars=yes,menubar=yes,resizable=yes');
  } else {
    win = window.open(url, 'newWindow', 'width=1024,height=768,toolbar=yes,location=yes,directories=yes,status=yes,scrollbars=yes,menubar=yes,resizable=yes');
  }
  win.focus();
}

// Show section
function expand(what) {
  document.getElementById(what).style.display = '';
  try {
    document.getElementById(what + 'off').style.display = 'none';
  } catch (c) {
  }
  try {
    document.getElementById(what + 'on').style.display = '';
  } catch (c) {
  }
  if (document.getElementById(what).parentNode != 'leftMenu') {
    initSize();
  }
}

// Hide section
function contract(what) {
  document.getElementById(what).style.display = 'none';
  try {
    document.getElementById(what + 'off').style.display = '';
  } catch (c) {
  }
  try {
    document.getElementById(what + 'on').style.display = 'none';
  } catch (c) {
  }
  if (document.getElementById(what).parentNode != 'leftMenu') {
    initSize();
  }
}

// Set the style for selected left menu item
function setSelected(element) {
  try {
    element = top.frames[1].document.getElementById(element);
    menuItems = top.frames[1].document.getElementsByTagName('div');
    for (i = 0; i < menuItems.length; i++) {
      if (menuItems[i].className == 'menu_item_selected') {
        menuItems[i].className = 'menu_item';
      } else if (menuItems[i].className == 'menu_item_double_selected') {
        menuItems[i].className = 'menu_item_double';
      }
    }
    if (element != null) {
      if (element.className == 'menu_item') {
        element.className = 'menu_item_selected';
      } else if (element.className == 'menu_item_double') {
        element.className = 'menu_item_double_selected';
      }
    }
  } catch (c) {
  }
}

function setSelectedTop(id) {
  // Blank all others
  try {
    document.getElementById('startmenu').className = 'TopMenu-MenuInactive-Bg';
    document.getElementById('profile').className = 'TopMenu-MenuInactive-Bg';
  } catch (c) {
  }
  try {
    document.getElementById('absencemenu').className = 'TopMenu-MenuInactive-Bg';
  } catch (c) {
  }
  try {
    document.getElementById('adminmenu').className = 'TopMenu-MenuInactive-Bg';
  } catch (c) {
  }
  try {
    document.getElementById('school').className = 'TopMenu-MenuInactive-Bg';
  } catch (c) {
  }
  try {
    document.getElementById('gmail').className = 'TopMenu-MenuInactive-Bg';
  } catch (c) {
  }
  try {
    document.getElementById('reports').className = 'TopMenu-MenuInactive-Bg';
  } catch (c) {
  }
  document.getElementById(id).className = 'TopMenu-MenuActive-Bg';
}

// Resize left, right, content_wrapper divs to fit irregular content
function initSize() {
  // Hide empty divs
  if ($('#left').text().trim().length == 0) {
    $('#left').parent().hide();
  }

  if ($('#right').text().trim().length == 0) {
    $('#right').parent().hide();
  }

  if ($('#full').text().trim().length == 0) {
    $('#full').hide();
  }

  if ($('#full2').text().trim().length == 0) {
    $('#full2').hide();
  }
}

function initSizeTabcontrol() {
  var c_w = document.getElementById('content_wrapper');
  var full = document.getElementById('full');
  var tab_control = document.getElementById('tabcontrol');

  if (c_w && full && tab_control && tab_control.offsetWidth > 731) {
    if (full) {
      full.style.width = tab_control.offsetWidth + 'px';
      c_w.style.width = full.offsetWidth + 'px';
    }
  }
}

// Sets all selects elements in form "formSel" and whos name contains "matchName" to selected index "selIndx"
function synchronizeSelect(formSel, inpVal, matchName) {
  for (var i = 0; i < formSel.elements.length; i++) {
    if ((formSel.elements[i].type == 'select-one') && (formSel.elements[i].name.indexOf(matchName) > -1)) {
      formSel.elements[i].value = inpVal;
      // Makes chosen update
      var triggerName = '#' + formSel.elements[i].name;
      $(triggerName).trigger('chosen:updated');
    }
  }
}

// Sets all text input elements in form "formInp" and whos name contains "matchName" to value "inpVal"
function synchronizeInput(formInp, inpVal, matchName) {
  for (var i = 0; i < formInp.elements.length; i++) {
    if ((formInp.elements[i].type == 'text') && (formInp.elements[i].name.substring(0, matchName.length) === matchName)) {
      formInp.elements[i].value = inpVal;
    }
  }
}

function synchronizeCheckBox(formInp, inpVal, matchName) {
  for (var i = 0; i < formInp.elements.length; i++) {
    if ((formInp.elements[i].type == 'checkbox') && (formInp.elements[i].name.indexOf(matchName) > -1)) {
      formInp.elements[i].checked = inpVal;
    }
  }
}

function getIcon(filename) {
  icon = 'blue-document';
  fileExtension = filename.substr((~-filename.lastIndexOf('.') >>> 0) + 2);
  switch (fileExtension) {
    case 'jpg':
    case 'jpeg':
    case 'gif':
    case 'png':
      icon += '-image';
      break;
    case 'ade':
    case 'adp':
    case 'adn':
    case 'accdb':
    case 'accdr':
    case 'accdt':
    case 'mdb':
    case 'mda':
    case 'mdn':
    case 'mdt':
    case 'mdw':
    case 'mdf':
    case 'mde':
    case 'accde':
    case 'mam':
    case 'maq':
    case 'mar':
    case 'mat':
    case 'maf':
      icon += '-access';
      break;
    case 'xls':
    case 'xlsx':
    case 'xlsm':
    case 'xslb':
    case 'xla':
    case 'xlt':
    case 'xlv':
    case 'xlw':
      icon += '-excel';
      break;
    case 'avi':
    case 'mpg':
    case 'mkv':
    case '3gp':
    case 'wmv':
      icon += '-film';
      break;
    case 'swf':
    case 'flv':
      icon += '-flash-movie';
      break;
    case 'ai':
      icon += '-illustrator';
      break;
    case 'mp3':
    case 'wav':
    case 'flac':
    case 'ogg':
      icon += '-music';
      break;
    case 'pdf':
      icon += '-pdf-text';
      break;
    case 'psd':
    case 'psb':
      icon += '-photoshop-image';
      break;
    case 'php':
    case 'phps':
    case 'php3':
    case 'php4':
      icon += '-php';
      break;
    case 'pptx':
    case 'pptm':
    case 'ppt':
    case 'potx':
    case 'potm':
    case 'pps':
    case 'ppsx':
      icon += '-powerpoint';
      break;
    case 'docx':
    case 'doc':
    case 'dot':
    case 'dotx':
    case 'docm':
    case 'dotm':
      icon += '-word-text';
      break;
    case 'zip':
    case '7z':
    case 'rar':
    case 'gz':
    case 'tgz':
      icon += '-zipper';
      break;
  }
  return icon += '.png';
}

/**
 * Determine the mobile operating system.
 * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.
 *
 * @returns {String}
 */
function getMobileOperatingSystem() {
  var userAgent = navigator.userAgent || navigator.vendor || window.opera;
  // Windows Phone must come first because its UA also contains "android"
  if (/windows phone/i.test(userAgent)) {
    return 'winphone';
  }
  if (/android/i.test(userAgent)) {
    return 'android';
  }
  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
    return 'ios';
  }
  return 'unknown';
}

function checkForNewInfoFromSchoolsoft() {
  schoolTypes = schoolTypes.split(',');
  lastLogin = new Date(lastLogin);
  var today = new Date();
  var dd = today.getDate();
  var mm = today.getMonth() + 1;
  var yyyy = today.getFullYear();
  if (dd < 10) {
    dd = '0' + dd;
  }
  if (mm < 10) {
    mm = '0' + mm;
  }
  today = dd + '/' + mm + '/' + yyyy;
  if ((contact || teachertype === 1) && (schoolTypes.length > 0 && schoolTypes !== '[]')) {
    for (var i = 0; i < schoolTypes.length; i++) {
      var schooltype = schoolTypes[i].replace(/[\[|\]]/g, '').trim();
      if (!newText) {
        $.ajax({
          type: 'GET',
          url: 'https://sms.schoolsoft.se/informationfromschoolsoft/infotexts/' + schooltype + '?' + today,
          contentType: 'application/json',
          data: {},
          dataType: 'text json',
          cache: true,
          success: function (infotext) {
            for (var t = 0; t < infotext.length; t++) {
              if ((new Date(infotext[t].updDate) >= lastLogin) &&
                (((infotext[t].contact == '1') && (contact == 'true')) ||
                  ((infotext[t].management == teachertype) && (infotext[t].management == '1')))) {
                newText = true;
              }
            }
            setTimeout(function () {
              if (newText) {
                $('.newInfoFromSchoolSoft').prop('hidden', false);
              }
            }, 100);
          }
        });
      }
    }
  }
}
